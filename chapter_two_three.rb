#[2.3]文字列
#タブルクォーテーションの場合だと、文字列中に改行文字(\n)などを入れたい時に識別してくれる。
puts "こんにちは\nさようなら"
#しかし、シングルクォーテーションだと、ただの文字列となってします。
puts 'こんにちは\nさようなら'

#ダブルクォーテーションを使うと式展開が可能となります。
#ex1
name = "alice"
puts "Hello, #{name}!"
#ex2
i = 10
puts "#{i}は16進数にすると#{i.to_s(16)}です"

#ダブルクォーテーションを使う文字列で、改行文字や式展開の機能を打ち消したい場合は手前にバックスラッシュをつけます。
#ex1
puts "こんにちは\\nさようなら"
#ex2 シングル(ダブル)クォーテーションの文字列の中にシングル(ダブル)クォーテーションを用いる場合
puts 'He said, "Dont\'t speak."'
puts "He said, \"Don't speak.\""

#文字列の比較
#文字列が同じかどうか調べるには「==」を使い、異なる値か調べるには「!=」を使います。
puts 'ruby' == 'ruby'
puts 'ruby' == 'Ruby'
puts 'ruby' != 'perl'
puts 'ruby' != 'ruby'

#不等号(< , <= , > , >=)を使って大小関係を比較することも可能です。この場合文字コードが大小比較の基準になります。
puts 'a' < 'b'
puts 'a' < 'A'
puts 'a' > 'A'
puts 'abc' < 'def'
puts 'abc' < 'ab'
puts 'abc' < 'abcd'
puts 'あいうえお' < "かきくけこ"