#[2.9]数値についてもっと詳しく

#[2.9,1]10進数以外の整数リテラル
#ex ２進数の場合は「0b」
puts 0b11111111
#ex ８進数の場合は「0」
puts 0377
#ex １６進数の場合は「0x」
puts 0xff

#[2.9,2]ビット演算
#ex 「~」：ビット反転
puts (~0b1010).to_s(2)
#ex 「&」:ビット積
puts (0b1010 & 0b1100).to_s(2)
#ex 「|」：ビット和
puts (0b1010 | 0b1100).to_s(2)
#ex 「^」:排他的論理和
puts (0b1010 ^ 0b1100).to_s(2)
#ex 「>>」：右ビットシフト
puts (0b1010 >> 1).to_s(2)
#ex 「<<」:左ビットシフト
puts (0b1010 << 1).to_s(2)
#結果を２進数で確認できるように「to_s(2)を呼び出している」

#[2.9.3]指数表現
#Rubyでは指数表現を使って浮動小数点を表すこともできる。
#ex 「2×10の3乘」
puts 2e-3

#[2.9.4]数値クラスのあれこれ
#整数であれば「Integerクラス」
puts 10.class

#小数であれば「Floatクラス」
puts 1.5.class

#有理数を表す「Rationalクラス」
#有理数リテラルを使う(3rが有理数クラス)
r = 2 / 3r
puts r
puts r.class
#文字列から有理数を変換する
r = '2/3'.to_r
puts r
puts r.class

#複素数を表す「Complexクラス」
#複素数リテラルを使う(0.5iが複素数リテラル)
c = 0.3 - 0.5i
puts c
puts c.class

#ここで出てきた数値クラスは全て「Numeric」クラスのサブクラス。